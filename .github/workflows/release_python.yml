name: Python

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]  # Run on version tags for releases
  pull_request:

# Cancel in-progress jobs on same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    uses: ./.github/workflows/tests.yml

  linux:
    needs: tests
    defaults:
      run:
        working-directory: wheel-metadata-injector
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64]
        python-version: [ "3.12"]
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Set up Python
      run: uv python install
    
    - name: Set up build deps
      run: uv pip install pip wheel setuptools

    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        target: ${{ matrix.target }}
        manylinux: auto
        args: --release --out dist -m Cargo.toml
        working-directory: wheel-metadata-injector
        before-script-linux: |
          yum install -y libgit2-devel openssl-devel
    
    - name: Install built wheel
      if: matrix.target == 'x86_64'
      run: |
        uv pip install --no-deps --force-reinstall dist/*.whl
        uv run python -c "import wheel_metadata_injector"
    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels
        path: wheel-metadata-injector/dist

  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    environment: pypi
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    needs: [ linux ]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: wheels
          path: dist
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1